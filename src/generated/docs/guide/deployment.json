{
  "id": "guide/deployment",
  "title": "Deployment",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/deployment.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"deployment\">Deployment<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#deployment\"><i class=\"material-icons\">link</i></a></h1>\n<p>When you are ready to deploy your Angular application to a remote server, you have various options for\ndeployment.</p>\n<a id=\"dev-deploy\"></a>\n<a id=\"copy-files\"></a>\n<h2 id=\"simplest-deployment-possible\">Simplest deployment possible<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#simplest-deployment-possible\"><i class=\"material-icons\">link</i></a></h2>\n<p>For the simplest deployment, create a production build and copy the output directory to a web server.</p>\n<ol>\n<li>\n<p>Start with the production build:</p>\n<code-example language=\"none\" class=\"code-shell\">\n  ng build --prod\n</code-example>\n</li>\n</ol>\n<ol start=\"2\">\n<li>\n<p>Copy <em>everything</em> within the output folder (<code>dist/</code> by default) to a folder on the server.</p>\n</li>\n<li>\n<p>Configure the server to redirect requests for missing files to <code>index.html</code>.\nLearn more about server-side redirects <a href=\"guide/deployment#fallback\">below</a>.</p>\n</li>\n</ol>\n<p>This is the simplest production-ready deployment of your application.</p>\n<a id=\"deploy-to-github\"></a>\n<h2 id=\"deploy-to-github-pages\">Deploy to GitHub pages<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#deploy-to-github-pages\"><i class=\"material-icons\">link</i></a></h2>\n<p>Another simple way to deploy your Angular app is to use <a href=\"https://help.github.com/articles/what-is-github-pages/\">GitHub Pages</a>.</p>\n<ol>\n<li>\n<p>You need to <a href=\"https://github.com/join\">create a GitHub account</a> if you don't have one, and then <a href=\"https://help.github.com/articles/create-a-repo/\">create a repository</a> for your project.\nMake a note of the user name and project name in GitHub.</p>\n</li>\n<li>\n<p>Build your project using Github project name, with the Angular CLI command <a href=\"cli/build\"><code>ng build</code></a> and the options shown here:\n<code-example language=\"none\" class=\"code-shell\">\nng build --prod --output-path docs --base-href /&#x3C;project_name>/\n</code-example></p>\n</li>\n<li>\n<p>When the build is complete, make a copy of <code>docs/index.html</code> and name it <code>docs/404.html</code>.</p>\n</li>\n<li>\n<p>Commit your changes and push.</p>\n</li>\n<li>\n<p>On the GitHub project page, configure it to <a href=\"https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch\">publish from the docs folder</a>.</p>\n</li>\n</ol>\n<p>You can see your deployed page at <code>https://&#x3C;user_name>.github.io/&#x3C;project_name>/</code>.</p>\n<div class=\"alert is-helpful\">\n<p>Check out <a href=\"https://github.com/angular-buch/angular-cli-ghpages\">angular-cli-ghpages</a>, a full featured package that does all this for you and has extra functionality.</p>\n</div>\n<hr>\n<a id=\"server-configuration\"></a>\n<h2 id=\"server-configuration\">Server configuration<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#server-configuration\"><i class=\"material-icons\">link</i></a></h2>\n<p>This section covers changes you may have make to the server or to files deployed to the server.</p>\n<a id=\"fallback\"></a>\n<h3 id=\"routed-apps-must-fallback-to-indexhtml\">Routed apps must fallback to <code>index.html</code><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#routed-apps-must-fallback-to-indexhtml\"><i class=\"material-icons\">link</i></a></h3>\n<p>Angular apps are perfect candidates for serving with a simple static HTML server.\nYou don't need a server-side engine to dynamically compose application pages because\nAngular does that on the client-side.</p>\n<p>If the app uses the Angular router, you must configure the server\nto return the application's host page (<code>index.html</code>) when asked for a file that it does not have.</p>\n<a id=\"deep-link\"></a>\n<p>A routed application should support \"deep links\".\nA <em>deep link</em> is a URL that specifies a path to a component inside the app.\nFor example, <code><a href=\"api/common/http\" class=\"code-anchor\">http</a>://www.mysite.com/heroes/42</code> is a <em>deep link</em> to the hero detail page\nthat displays the hero with <code>id: 42</code>.</p>\n<p>There is no issue when the user navigates to that URL from within a running client.\nThe Angular router interprets the URL and routes to that page and hero.</p>\n<p>But clicking a link in an email, entering it in the browser address bar,\nor merely refreshing the browser while on the hero detail page â€”\nall of these actions are handled by the browser itself, <em>outside</em> the running application.\nThe browser makes a direct request to the server for that URL, bypassing the router.</p>\n<p>A static server routinely returns <code>index.html</code> when it receives a request for <code><a href=\"api/common/http\" class=\"code-anchor\">http</a>://www.mysite.com/</code>.\nBut it rejects <code><a href=\"api/common/http\" class=\"code-anchor\">http</a>://www.mysite.com/heroes/42</code> and returns a <code>404 - Not Found</code> error <em>unless</em> it is\nconfigured to return <code>index.html</code> instead.</p>\n<h4 id=\"fallback-configuration-examples\">Fallback configuration examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#fallback-configuration-examples\"><i class=\"material-icons\">link</i></a></h4>\n<p>There is no single configuration that works for every server.\nThe following sections describe configurations for some of the most popular servers.\nThe list is by no means exhaustive, but should provide you with a good starting point.</p>\n<ul>\n<li>\n<p><a href=\"https://httpd.apache.org/\">Apache</a>: add a\n<a href=\"http://httpd.apache.org/docs/current/mod/mod_rewrite.html\">rewrite rule</a> to the <code>.htaccess</code> file as shown\n(<a href=\"https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/\">https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/</a>):</p>\n  <code-example format=\".\">\n    RewriteEngine On\n    # If an existing asset or directory is requested go to it as it is\n    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]\n    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d\n    RewriteRule ^ - [L]\n<p>    # If the requested resource doesn't exist, use index.html\nRewriteRule ^ /index.html\n</p>\n</code-example></li>\n</ul>\n<ul>\n<li>\n<p><a href=\"http://nginx.org/\">Nginx</a>: use <code>try_files</code>, as described in\n<a href=\"https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#front-controller-pattern-web-apps\">Front Controller Pattern Web Apps</a>,\nmodified to serve <code>index.html</code>:</p>\n  <code-example format=\".\">\n    try_files $uri $uri/ /index.html;\n  </code-example>\n</li>\n</ul>\n<ul>\n<li>\n<p><a href=\"https://www.iis.net/\">IIS</a>: add a rewrite rule to <code>web.config</code>, similar to the one shown\n<a href=\"http://stackoverflow.com/a/26152011/2116927\">here</a>:</p>\n  <code-example format=\".\">\n    &#x3C;system.webServer>\n      &#x3C;rewrite>\n        &#x3C;rules>\n          &#x3C;rule name=\"Angular <a href=\"api/router/Routes\" class=\"code-anchor\">Routes</a>\" stopProcessing=\"true\">\n            &#x3C;match url=\".*\" />\n            &#x3C;conditions logicalGrouping=\"MatchAll\">\n              &#x3C;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" negate=\"true\" />\n              &#x3C;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" negate=\"true\" />\n            &#x3C;/conditions>\n            &#x3C;action type=\"Rewrite\" url=\"/index.html\" />\n          &#x3C;/rule>\n        &#x3C;/rules>\n      &#x3C;/rewrite>\n    &#x3C;/system.webServer>\n  </code-example>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://pages.github.com/\">GitHub Pages</a>: you can't\n<a href=\"https://github.com/isaacs/github/issues/408\">directly configure</a>\nthe GitHub Pages server, but you can add a 404 page.\nCopy <code>index.html</code> into <code>404.html</code>.\nIt will still be served as the 404 response, but the browser will process that page and load the app properly.\nIt's also a good idea to\n<a href=\"https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch\">serve from <code>docs/</code> on master</a>\nand to\n<a href=\"https://www.bennadel.com/blog/3181-including-node-modules-and-vendors-folders-in-your-github-pages-site.htm\">create a <code>.nojekyll</code> file</a></li>\n</ul>\n<ul>\n<li>\n<p><a href=\"https://firebase.google.com/docs/hosting/\">Firebase hosting</a>: add a\n<a href=\"https://firebase.google.com/docs/hosting/url-redirects-rewrites#section-rewrites\">rewrite rule</a>.</p>\n  <code-example format=\".\">\n    \"rewrites\": [ {\n      \"source\": \"**\",\n      \"destination\": \"/index.html\"\n    } ]\n  </code-example>\n</li>\n</ul>\n<a id=\"cors\"></a>\n<h3 id=\"requesting-services-from-a-different-server-cors\">Requesting services from a different server (CORS)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#requesting-services-from-a-different-server-cors\"><i class=\"material-icons\">link</i></a></h3>\n<p>Angular developers may encounter a\n<a href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" title=\"Cross-origin resource sharing\">\n<i>cross-origin resource sharing</i></a> error when making a service request (typically a data service request)\nto a server other than the application's own host server.\nBrowsers forbid such requests unless the server permits them explicitly.</p>\n<p>There isn't anything the client application can do about these errors.\nThe server must be configured to accept the application's requests.\nRead about how to enable CORS for specific servers at\n<a href=\"http://enable-cors.org/server.html\" title=\"Enabling CORS server\">enable-cors.org</a>.</p>\n<hr>\n<a id=\"optimize\"></a>\n<h2 id=\"production-optimizations\">Production optimizations<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#production-optimizations\"><i class=\"material-icons\">link</i></a></h2>\n<p>The <code>--prod</code> <em>meta-flag</em> engages the following build optimization features.</p>\n<ul>\n<li><a href=\"guide/aot-compiler\">Ahead-of-Time (AOT) Compilation</a>: pre-compiles Angular component templates.</li>\n<li><a href=\"guide/deployment#enable-prod-mode\">Production mode</a>: deploys the production environment which enables <em>production mode</em>.</li>\n<li>Bundling: concatenates your many application and library files into a few bundles.</li>\n<li>Minification: removes excess whitespace, comments, and optional tokens.</li>\n<li>Uglification: rewrites code to use short, cryptic variable and function names.</li>\n<li>Dead code elimination: removes unreferenced modules and much unused code.</li>\n</ul>\n<p>See <a href=\"cli/build\"><code>ng build</code></a> for more about CLI build options and what they do.</p>\n<a id=\"enable-prod-mode\"></a>\n<h3 id=\"enable-runtime-production-mode\">Enable runtime production mode<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#enable-runtime-production-mode\"><i class=\"material-icons\">link</i></a></h3>\n<p>In addition to build optimizations, Angular also has a runtime production mode. Angular apps run in development mode by default, as you can see by the following message on the browser console:</p>\n<code-example format=\"nocode\">\n  Angular is running in the development mode. Call <a href=\"api/core/enableProdMode\" class=\"code-anchor\">enableProdMode</a>() to enable the production mode.\n</code-example>\n<p>Switching to <em>production mode</em> makes it run faster by disabling development specific checks such as the dual change detection cycles.</p>\n<p>When you enable production builds via <code>--prod</code> command line flag, the runtime production mode is enabled as well.</p>\n<a id=\"lazy-loading\"></a>\n<h3 id=\"lazy-loading\">Lazy loading<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#lazy-loading\"><i class=\"material-icons\">link</i></a></h3>\n<p>You can dramatically reduce launch time by only loading the application modules that\nabsolutely must be present when the app starts.</p>\n<p>Configure the Angular Router to defer loading of all other modules (and their associated code), either by\n<a href=\"guide/router#preloading\" title=\"Preloading\">waiting until the app has launched</a>\nor by <a href=\"guide/router#asynchronous-routing\" title=\"Lazy loading\"><em>lazy loading</em></a>\nthem on demand.</p>\n<div class=\"alert is-helpful> <h4>Don&#x27;t eagerly import something from a lazy-loaded module</h4> <p>If you mean to lazy-load a module, be careful not import it in a file that&#x27;s eagerly loaded when the app starts (such as the root <code>AppModule</code>). If you do that, the module will be loaded immediately.</p> <p>The bundling configuration must take lazy loading into consideration. Because lazy-loaded modules aren&#x27;t imported in JavaScript, bundlers exclude them by default. Bundlers don&#x27;t know about the router configuration and can&#x27;t create separate bundles for lazy-loaded modules. You would have to create these bundles manually.</p> <p>The CLI runs the <a href=\" https:=\"\" github.com=\"\" angular=\"\" angular-cli=\"\" tree=\"\" master=\"\" packages=\"\" %40ngtools=\"\" webpack&#x22;=\"\">Angular Ahead-of-Time Webpack Plugin\nwhich automatically recognizes lazy-loaded <code>NgModules</code> and creates separate bundles for them.<p></p>\n</div>\n<a id=\"measure\"></a>\n<h3 id=\"measure-performance\">Measure performance<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#measure-performance\"><i class=\"material-icons\">link</i></a></h3>\n<p>You can make better decisions about what to optimize and how when you have a clear and accurate understanding of\nwhat's making the application slow.\nThe cause may not be what you think it is.\nYou can waste a lot of time and money optimizing something that has no tangible benefit or even makes the app slower.\nYou should measure the app's actual behavior when running in the environments that are important to you.</p>\n<p>The\n<a href=\"https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing\" title=\"Chrome DevTools Network Performance\">\nChrome DevTools Network Performance page</a> is a good place to start learning about measuring performance.</p>\n<p>The <a href=\"https://www.webpagetest.org/\">WebPageTest</a> tool is another good choice\nthat can also help verify that your deployment was successful.</p>\n<a id=\"inspect-bundle\"></a>\n<h3 id=\"inspect-the-bundles\">Inspect the bundles<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#inspect-the-bundles\"><i class=\"material-icons\">link</i></a></h3>\n<p>The <a href=\"https://github.com/danvk/source-map-explorer/blob/master/README.md\">source-map-explorer</a>\ntool is a great way to inspect the generated JavaScript bundles after a production build.</p>\n<p>Install <code>source-map-explorer</code>:</p>\n<code-example language=\"none\" class=\"code-shell\">\n  npm install source-map-explorer --save-dev\n</code-example>\n<p>Build your app for production <em>including the source maps</em></p>\n<code-example language=\"none\" class=\"code-shell\">\n  ng build --prod --source-map\n</code-example>\n<p>List the generated bundles in the <code>dist/</code> folder.</p>\n<code-example language=\"none\" class=\"code-shell\">\n  ls dist/*.bundle.js\n</code-example>\n<p>Run the explorer to generate a graphical representation of one of the bundles.\nThe following example displays the graph for the <em>main</em> bundle.</p>\n<code-example language=\"none\" class=\"code-shell\">\n  node_modules/.bin/source-map-explorer dist/main.*.bundle.js\n</code-example>\n<p>The <code>source-map-explorer</code> analyzes the source map generated with the bundle and draws a map of all dependencies,\nshowing exactly which classes are included in the bundle.</p>\n<p>Here's the output for the <em>main</em> bundle of the QuickStart.</p>\n<figure>\n  <img src=\"generated/images/guide/cli-quickstart/quickstart-sourcemap-explorer.png\" alt=\"quickstart sourcemap explorer\" width=\"767\" height=\"401\">\n</figure>\n<a id=\"base-tag\"></a>\n<h2 id=\"the-base-tag\">The <code>base</code> tag<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#the-base-tag\"><i class=\"material-icons\">link</i></a></h2>\n<p>The HTML <a href=\"/guide/router\"><em>&#x3C;base href=\"...\"/></em></a>\nspecifies a base path for resolving relative URLs to assets such as images, scripts, and style sheets.\nFor example, given the <code>&#x3C;base <a href=\"api/router/RouterLinkWithHref#href\" class=\"code-anchor\">href</a>=\"/my/app/\"></code>, the browser resolves a URL such as <code>some/place/foo.jpg</code>\ninto a server request for <code>my/app/some/place/foo.jpg</code>.\nDuring navigation, the Angular router uses the <em>base href</em> as the base path to component, template, and module files.</p>\n<div class=\"alert is-helpful\">\n<p>See also the <a href=\"api/common/APP_BASE_HREF\" title=\"API: APP_BASE_HREF\"><em>APP_BASE_HREF</em></a> alternative.</p>\n</div>\n<p>In development, you typically start the server in the folder that holds <code>index.html</code>.\nThat's the root folder and you'd add <code>&#x3C;base <a href=\"api/router/RouterLinkWithHref#href\" class=\"code-anchor\">href</a>=\"/\"></code> near the top of <code>index.html</code> because <code>/</code> is the root of the app.</p>\n<p>But on the shared or production server, you might serve the app from a subfolder.\nFor example, when the URL to load the app is something like <code><a href=\"api/common/http\" class=\"code-anchor\">http</a>://www.mysite.com/my/app/</code>,\nthe subfolder is <code>my/app/</code> and you should add <code>&#x3C;base <a href=\"api/router/RouterLinkWithHref#href\" class=\"code-anchor\">href</a>=\"/my/app/\"></code> to the server version of the <code>index.html</code>.</p>\n<p>When the <code>base</code> tag is mis-configured, the app fails to load and the browser console displays <code>404 - Not Found</code> errors\nfor the missing files. Look at where it <em>tried</em> to find those files and adjust the base tag appropriately.</p>\n<h2 id=\"building-and-serving-for-deployment\">Building and serving for deployment<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/deployment#building-and-serving-for-deployment\"><i class=\"material-icons\">link</i></a></h2>\n<p>When you are designing and developing applications, you typically use <code>ng serve</code> to build your app for fast, local, iterative development.\nWhen you are ready to deploy, however, you must use the <code>ng build</code> command to build the app and deploy the build artifacts elsewhere.</p>\n<p>Both <code>ng build</code> and <code>ng serve</code> clear the output folder before they build the project, but only the <code>ng build</code> command writes the generated build artifacts to the output folder.</p>\n<div class=\"alert is-helpful\">\n<p>The output folder is  <code>dist/</code> by default.\nTo output to a different folder, change the <code>outputPath</code> in <code>angular.json</code>.</p>\n</div>\n<p>The <code>ng serve</code> command builds, watches, and serves the application from local memory, using a local development server.\nWhen you have deployed your app to another server, however, you might still want to serve the app so that you can continue to see changes that you make in it.\nYou can do this by adding the <code>--watch</code> option to the <code>ng build</code> command.</p>\n<code-example>\nng build --watch\n</code-example>\n<p>Like the <code>ng serve</code> command, this regenerates output files when source files change.</p>\n<p>For complete details of the CLI commands, see the <a href=\"cli\">CLI command reference</a>.</p>\n\n</div>\n\n<!-- links to this doc:\n - guide/architecture-next-steps\n - guide/change-log\n - guide/npm-packages\n - guide/setup\n - guide/visual-studio-2015\n-->\n<!-- links from this doc:\n - /guide/router\n - api/common/APP_BASE_HREF\n - api/common/http\n - api/core/enableProdMode\n - api/router/RouterLinkWithHref#href\n - api/router/Routes\n - cli\n - cli/build\n - guide/aot-compiler\n - guide/deployment#building-and-serving-for-deployment\n - guide/deployment#deploy-to-github-pages\n - guide/deployment#deployment\n - guide/deployment#enable-prod-mode\n - guide/deployment#enable-runtime-production-mode\n - guide/deployment#fallback\n - guide/deployment#fallback-configuration-examples\n - guide/deployment#inspect-the-bundles\n - guide/deployment#lazy-loading\n - guide/deployment#measure-performance\n - guide/deployment#production-optimizations\n - guide/deployment#requesting-services-from-a-different-server-cors\n - guide/deployment#routed-apps-must-fallback-to-indexhtml\n - guide/deployment#server-configuration\n - guide/deployment#simplest-deployment-possible\n - guide/deployment#the-base-tag\n - guide/router#asynchronous-routing\n - guide/router#preloading\n - http://enable-cors.org/server.html\n - http://httpd.apache.org/docs/current/mod/mod_rewrite.html\n - http://nginx.org/\n - http://stackoverflow.com/a/26152011/2116927\n - https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing\n - https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n - https://firebase.google.com/docs/hosting/\n - https://firebase.google.com/docs/hosting/url-redirects-rewrites#section-rewrites\n - https://github.com/angular-buch/angular-cli-ghpages\n - https://github.com/angular/angular/edit/master/aio/content/guide/deployment.md?message=docs%3A%20describe%20your%20change...\n - https://github.com/danvk/source-map-explorer/blob/master/README.md\n - https://github.com/isaacs/github/issues/408\n - https://github.com/join\n - https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch\n - https://help.github.com/articles/create-a-repo/\n - https://help.github.com/articles/what-is-github-pages/\n - https://httpd.apache.org/\n - https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/\n - https://pages.github.com/\n - https://www.bennadel.com/blog/3181-including-node-modules-and-vendors-folders-in-your-github-pages-site.htm\n - https://www.iis.net/\n - https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#front-controller-pattern-web-apps\n - https://www.webpagetest.org/\n-->"
}