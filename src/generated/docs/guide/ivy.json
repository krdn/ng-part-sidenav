{
  "id": "guide/ivy",
  "title": "Opting into Angular Ivy with Angular CLI",
  "contents": "\n\n\n  <div class=\"github-links\">\n    <a href=\"https://github.com/angular/angular/edit/master/aio/content/guide/ivy.md?message=docs%3A%20describe%20your%20change...\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  </div>\n\n\n<div class=\"content\">\n<h1 id=\"opting-into-angular-ivy-with-angular-cli\">Opting into Angular Ivy with Angular CLI<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#opting-into-angular-ivy-with-angular-cli\"><i class=\"material-icons\">link</i></a></h1>\n<p><a href=\"https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7\">Starting with Angular version 8</a> you can opt-in to the new [Angular Ivy compilation and rendering pipeline].</p>\n<h2 id=\"starting-a-new-project-using-ivy\">Starting a new project using Ivy<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#starting-a-new-project-using-ivy\"><i class=\"material-icons\">link</i></a></h2>\n<p>To start a new project with Ivy enabled, use the <code>--enable-ivy</code> flag with the <a href=\"cli/new\"><code>ng new</code></a> command:</p>\n<code-example language=\"sh\">\nng new shiny-ivy-app --enable-ivy\n</code-example>\n<p>Everything will be configured for you:</p>\n<ul>\n<li><code>enableIvy</code> set to <code>true</code> in <code>src/tsconfig.app.json</code>.</li>\n<li><code>\"aot\": true</code> added to your default build options.</li>\n<li><code>postinstall</code> script for the <a href=\"guide/ivy#ngcc\">Angular Compatibility Compiler</a>.</li>\n</ul>\n<a id=\"updating\"></a>\n<h2 id=\"updating-an-existing-project-to-use-ivy\">Updating an existing project to use Ivy<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#updating-an-existing-project-to-use-ivy\"><i class=\"material-icons\">link</i></a></h2>\n<p>By configuring a few key files, you can also update your existing project(s) to use Ivy.</p>\n<ul>\n<li>Add the <code>allowEmptyCodegenFiles</code> (needed only before version 8 final) and <code>enableIvy</code> options in the <code>angularCompilerOptions</code> in your project's <code>src/tsconfig.app.json</code>:</li>\n</ul>\n<code-example language=\"json\">\n{\n  \"compilerOptions\": { ... },\n  \"angularCompilerOptions\": {\n    \"enableIvy\": true,\n    \"allowEmptyCodegenFiles\": true,\n  }\n}\n</code-example>\n<ul>\n<li>Set the default build options for your project to always use AOT compilation if it isn't already:</li>\n</ul>\n<code-example language=\"json\">\n{\n  \"projects\": {\n    \"my-existing-project\": {\n      \"architect\": {\n        \"build\": {\n          \"options\": {\n            ...\n            \"aot\": true,\n          }\n        }\n      }\n    }\n  }\n}\n</code-example>\n<ul>\n<li>Add a <code>postinstall</code> script to the workspace <code>package.json</code> file to run the <a href=\"guide/ivy#ngcc\">Angular Compatibility Compiler</a>:</li>\n</ul>\n<code-example language=\"json\">\n{\n  \"scripts\": {\n    ...\n    \"postinstall\": \"ivy-ngcc\"\n  }\n}\n</code-example>\n<ul>\n<li>Reinstall your <code>package.json</code> dependencies to run the newly added script:</li>\n</ul>\n<code-example>\nnpm install\n</code-example>\n<h2 id=\"switching-back-to-the-current-compiler\">Switching back to the current compiler<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#switching-back-to-the-current-compiler\"><i class=\"material-icons\">link</i></a></h2>\n<p>To stop using the Ivy compiler you need to undo the steps taken when <a href=\"guide/ivy#updating\">updating to use Ivy</a>.</p>\n<ul>\n<li>Set <code>enableIvy</code> to false in <code>src/tsconfig.app.json</code>, or remove it completely.</li>\n<li>Remove <code>\"aot\": true</code> from your default build options if you didn't have it there before.</li>\n<li>Remove the <code>postinstall</code> script.</li>\n<li>Delete and reinstall your node modules.</li>\n</ul>\n<a id=\"ngcc\"></a>\n<h2 id=\"the-angular-compatibility-compiler\">The Angular Compatibility Compiler<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ivy#the-angular-compatibility-compiler\"><i class=\"material-icons\">link</i></a></h2>\n<p>Your third party libraries also need to be compiled with Ivy for you to use them in your Ivy application.\nThat's where the Angular Compatibility (<code>ngcc</code>) compiler comes into play.</p>\n<p>We set it as a postinstall script in your <code>package.json</code> so that it always runs when you install\nyour <code>package.json</code> dependencies.</p>\n<p>Using a postinstall hook to run <code>ngcc</code> is just a temporary integration.\nWe expect <code>ngcc</code> to be seamlessly integrated into the Angular CLI build pipeline in the future before the full Ivy rollout.\nOnce that's implemented <code>ngcc</code> will not be visible to developers.</p>\n<p>Until that happens, opting into Ivy means that all projects in a single CLI workspace will be compiled with Ivy.</p>\n<p>Note: we are aware of build-time performance issues with ngcc. Please bear with us while we improve the tooling and build integration in the Angular CLI.</p>\n\n</div>\n\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - cli/new\n - guide/ivy#ngcc\n - guide/ivy#opting-into-angular-ivy-with-angular-cli\n - guide/ivy#starting-a-new-project-using-ivy\n - guide/ivy#switching-back-to-the-current-compiler\n - guide/ivy#the-angular-compatibility-compiler\n - guide/ivy#updating\n - guide/ivy#updating-an-existing-project-to-use-ivy\n - https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7\n - https://github.com/angular/angular/edit/master/aio/content/guide/ivy.md?message=docs%3A%20describe%20your%20change...\n-->"
}